plugins {
    id 'java'
    id 'org.springframework.boot' version '3.1.5'
    id 'io.spring.dependency-management' version '1.1.3'
    id "org.asciidoctor.convert" version "2.4.0" // REST Docs
}

group = 'shop.mtcoding'
version = '0.0.1-SNAPSHOT'

java {
    sourceCompatibility = '21'
}

configurations {
    compileOnly {
        extendsFrom annotationProcessor
    }
}

repositories {
    mavenCentral()
}

dependencies {
    implementation 'org.springframework.boot:spring-boot-starter-websocket'
    implementation group: 'org.mindrot', name: 'jbcrypt', version: '0.4'
    implementation group: 'ch.simas.qlrm', name: 'qlrm', version: '1.7.1'
    implementation group: 'com.auth0', name: 'java-jwt', version: '4.3.0'
    implementation 'org.springframework.boot:spring-boot-starter-aop'
    implementation 'org.springframework.boot:spring-boot-starter-data-jpa'
    implementation 'org.springframework.boot:spring-boot-starter-validation'
    implementation 'org.springframework.boot:spring-boot-starter-web'
    compileOnly 'org.projectlombok:lombok'
    developmentOnly 'org.springframework.boot:spring-boot-devtools'
    runtimeOnly 'com.h2database:h2'
    runtimeOnly 'com.mysql:mysql-connector-j'
    annotationProcessor 'org.projectlombok:lombok'
    testImplementation 'org.springframework.boot:spring-boot-starter-test'
}

tasks.named('test') {
    systemProperty 'file.encoding', 'UTF-8'
    useJUnitPlatform()
}

jar {
    enabled = false
}

// ========== REST Docs Begin ==========

//asciidoctor.doFirst {
//    delete file('src/main/resources/static/docs')
//}
//
//ext {
//    snippetsDir = file('build/generated-snippets')
//}
//
//test {
//    outputs.dir snippetsDir
//}
//
//asciidoctor {
//    inputs.dir snippetsDir
//    dependsOn test
//}
//
//bootJar {
//    dependsOn asciidoctor
//    // build/asciidoc/html5/에 html파일을 src/main/resources/static/doc 복사하려면
//    copy {
//        from "build/asciidoc/html5"
//        into "src/main/resources/static/docs"
//    }
//}

// ========== REST Docs End ==========